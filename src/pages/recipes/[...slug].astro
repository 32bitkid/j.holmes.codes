---
import { getImage } from 'astro:assets';
import { getCollection } from 'astro:content';
import Page from '../../layouts/page.astro';

export async function getStaticPaths() {
  const recipeEntries = await getCollection('recipes');
  return recipeEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { recipe: entry },
  }));
}

const { recipe } = Astro.props;
const { name, description, servings, thumbnail } = recipe.data;
const { Content } = await recipe.render();
---

<Page
  title={name}
  description={description}
  image={thumbnail ? {
    src: new URL((await getImage({
        src: thumbnail.image,
        width: 800,
        height: 416,
        format: 'png',
    })).src, Astro.url),
    alt: thumbnail.alt,
  }: undefined}
>
    <article class="markdown recipe">
        <h1>{name}</h1>
        {servings && <p class="servings">makes {servings}</p>}
        <Content />
    </article>
</Page>

<style>
    .recipe {
        font-feature-settings: 'onum';
    }

    .servings {
        text-align: center;
        font-style: italic;
        quotes: '(' ')';
        margin-top: -1rlh;
        font-size: var(--f-small);
        &:not(:empty) {
            &::before { content: open-quote; }
            &::after { content: close-quote; }
        }
    }

    .recipe::before, .recipe::after {
        display: block;
        content: '\2042';
        font-size: var(--f-x-large);
        margin-block: 2rlh;
        text-align: center;
    }

    .recipe h1 {
        text-align: center;
        margin-block-start: 0;
    }

    .recipe :global(ul) {
        margin-block: 1rlh;
        margin-inline: auto;
        width: max-content;
        max-width: 85cqi;
        columns: 2;
        column-rule: 3px double currentColor;
        column-gap: 4ch;
    }

    .recipe :global(ol:has(li:only-child)) {
        text-align: center;
    }

    .recipe :global(ul li) {
        text-wrap: balance;
        padding-left: 2ch;
        text-indent: -2ch;
    }

    .recipe :global(ul:has(
        > :last-child:nth-child(1),
        > :last-child:nth-child(2),
        > :last-child:nth-child(3)
    )) {
        columns: 1;
    }

    .recipe :global(ol) {
        margin-block: 1rlh;
        font-size: 0;
        text-align: justify;
    }

    .recipe :global(ol li) {
        display: inline;
        font-size: 1rem;
        &:not(:last-child)::after { content: '\200D\FF0F'; }
        &:last-child::after { content: '.'; }
    }
</style>