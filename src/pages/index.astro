---
import { getImage } from 'astro:assets';
import { getCollection } from 'astro:content';
import Page from '@layouts/page.astro';
import AboutMe from '../components/AboutMe.mdx';
import BlogSummary from '@components/BlogSummary.astro';
import NpmProject from '@components/projects/NpmProject.astro';
import GithubProject from '@components/projects/GithubProject.astro';
import CodepenSketch from '@components/projects/CodepenSketch.astro';
import { blogSorting } from '../utils/blogSorting';

const max = 5;
const allBlogPosts = (
  await getCollection('blog', ({ data }) =>
    import.meta.env.PROD ? data.published === true : true,
  )
).toSorted(blogSorting);

const projects = (await getCollection('projects')).toSorted((a, b) => {
  const order = a.data.order - b.data.order;
  if (order !== 0) return order;
  return a.data.title.localeCompare(b.data.title);
});

const showMore = allBlogPosts.length > max;
---

<Page description="Thoughts, sketches and code by J. Holmes">
  <section>
    <h1>About me…</h1>
    <AboutMe />
  </section>

  <section>
    <h2>Recent Thoughts…</h2>
    <ul class="posts">
      {allBlogPosts.slice(0, max).map((blog) => <BlogSummary blog={blog} />)}
    </ul>
    {
      showMore && (
        <nav class="more">
          <a href="/blog">more posts</a>
        </nav>
      )
    }
  </section>

  <section>
    <h2>Code &amp; Links…</h2>
    <ul class="projects">
      {
        projects.map(async (project) => {
          const { data } = project;
          const { type, ...rest } = data;
          const { Content } = await project.render();
          if (type === 'npm') {
            const { title, link } = data;
            return (
              <NpmProject title={title} link={link}>
                {' '}
                <Content />
              </NpmProject>
            );
          } else if (type === 'github') {
            const { title, link } = data;
            return (
              <GithubProject title={title} link={link}>
                {' '}
                <Content />
              </GithubProject>
            );
          } else if (type === 'codepen') {
            const { title, pen } = data;
            return (
              <CodepenSketch title={title} pen={pen}>
                <Content />
              </CodepenSketch>
            );
          } else {
            return <Fragment />;
          }
        })
      }
    </ul>
  </section>
</Page>

<style>
  .more {
    text-align: center;
    padding-inline-start: 2ch;
  }

  .more a::after {
    content: ' \2192';
  }

  .posts {
    display: grid;
    grid-gap: 0.75rlh 1.5ch;
    grid-template-columns: max-content 1fr;
    margin-block-end: 1rlh;
    margin-inline: 1ch;
  }

  .projects {
    display: flex;
    flex-direction: column;
    gap: 1.5rlh 0;
  }
</style>
