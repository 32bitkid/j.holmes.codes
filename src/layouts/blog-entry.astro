---
import { format } from 'date-fns';
import { getImage } from 'astro:assets';
import Tags from '@components/Tags.astro';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import { ogSafe } from '../utils/ogSafe';

import '@styles/reset.css';
import '@styles/font.css';
import '@styles/core.css';

const {
  title,
  authorDate,
  pubDate,
  tags,
  image,
  summary = 'Thoughts on thoughtsâ€¦',
} = Astro.props.frontmatter ?? Astro.props;

const date = authorDate ?? pubDate ?? new Date().toISOString();
const isPublished = typeof pubDate !== 'undefined';

const pageTitle = `${title} \u2236 j.holmes.codes`;

const optImage = image && (await getImage({ src: image.src }));
---

<html class:list={{ draft: !isPublished }}>
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <title>{pageTitle}</title>

    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <link
      rel="alternate"
      type="application/rss+xml"
      title="J. Holmes Codes"
      href={new URL('rss.xml', Astro.site)}
    />

    <meta property="og:url" content={Astro.url.href} />
    <meta property="og:type" content="website" />
    <meta property="og:title" content={ogSafe(title)} />
    <meta property="og:description" content={ogSafe(summary)} />
    {optImage && <meta property="og:image" content={optImage.src} />}
    {image && <meta property="og:image:alt" content={image.alt} />}

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:creator" content="@32bitkid" />
    <meta property="twitter:domain" content={Astro.url.hostname} />
    <meta property="twitter:url" content={Astro.url.href} />
    <meta name="twitter:title" content={ogSafe(title)} />
    <meta name="twitter:description" content={ogSafe(summary)} />
    {optImage && <meta property="twitter:image" content={optImage.src} />}
    {image && <meta property="twitter:image:alt" content={image.alt} />}

    <link
      rel="stylesheet"
      href="/css/katex.min.css"
      integrity="sha384-MlJdn/WNKDGXveldHDdyRP1R4CTHr3FeuDNfhsLPYrq2t0UBkUdK2jyTnXPEK1NQ"
    />
  </head>
  <body>
    <Header />
    <article>
      <h1>{title}</h1>
      <div class="byline">
        {date && <time datetime={date}>{format(date, 'MMMM d, yyyy')}</time>}
        {
          !isPublished && (
            <strong>
              <small> [unpublished]</small>
            </strong>
          )
        }
        {
          tags && (
            <>
              {' in '}
              <Tags tags={tags} />
            </>
          )
        }
      </div>
      <section class="content">
        <slot />
      </section>
    </article>
    <Footer />
  </body>
</html>

<style>
  body {
    display: grid;
    min-height: calc(100vh - 1rlh * 1.5);
    grid-template-rows: 1fr min-content;
    justify-items: stretch;
    align-items: stretch;
  }

  article {
    width: 100%;
    max-width: var(--max-content);
    padding-inline: 1.5ch;
    box-sizing: border-box;
    justify-self: center;
  }

  :root.draft {
    background-repeat: repeat;
    background-size: 100px 100px;
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg"><g transform="rotate(25)"><text x="15" y="15" font-size="30" fill="rgba(200,200,200,0.1)">Draft</text></g></svg>');
  }

  .byline {
    font-variant-numeric: tabular-nums;
    line-height: calc(1rlh * 1);
    font-size: 0.7492rem;
    margin-left: 3ch;
    margin-bottom: calc(1rlh * 1);
  }

  .content {
  }

  .content :global(.astro-code) {
    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
    padding: 1rem;
    border-radius: 0.5rem;
  }

  .content :global(figure) {
    margin-bottom: 1rlh;
  }

  .content :global(ul, ol) {
    margin-left: 4ch;
    margin-bottom: 1rlh;
  }

  .content :global(ul) {
    list-style: '\25E6\2007';
  }

  .content :global(ol) {
    list-style: decimal;
  }

  .content :global(table) {
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 1rlh;
    font-variant-numeric: tabular-nums oldstyle-nums;
  }

  .content :global(table thead th) {
    font-weight: 400;
    letter-spacing: -0.04em;
    font-family: 'Equity Caps B', serif;
    font-feature-settings: 'c2sc', 'smcp', 'onum';
    line-height: calc(1rlh * 1);
    font-size: 0.7492rem;
    margin-left: 3ch;
    margin-bottom: calc(1rlh * 1);
    padding-inline: 2ch;
  }

  .content :global(table tbody td) {
    padding-inline: 2ch;
    padding-block: 0.5rem;
  }

  .content :global(table tbody td:empty:before) {
    content: '\2014';
    color: rgba(0, 0, 0, 0.25);
  }

  .content :global(tbody > tr:nth-child(3n + 1):not(:empty) td),
  .content :global(tbody > tr:nth-child(3n + 1):not(:empty) th) {
    border-top: 1px dashed var(--pal-light);
  }

  .content :global(sup) {
    vertical-align: super;
    font-size: 0.707em;
  }

  .content :global(.footnotes ol) {
    font-variant-numeric: oldstyle-nums;
    line-height: calc(1rlh * 1);
    font-size: 0.7492rem;
    margin-bottom: calc(1rlh * 1);
    padding-inline-start: 4ch;
  }

  .content :global(.footnotes li p) {
    margin-bottom: calc(1rlh * 0.25);
  }

  .content :global(pre:not(figure pre)) {
    margin-bottom: 1rlh;
  }

  h1 {
    margin-block-start: max(10rem, 25vh);
    margin-block-end: 0;
  }
</style>
